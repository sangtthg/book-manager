<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Danh sách khách hàng</title>
    <style>
      body {
        background-color: #f4f4f9;
        color: #333;
        margin: 0;
        padding: 20px;
      }
      h3 {
        margin-bottom: 20px;
      }
      .search-container {
        margin-bottom: 20px;
      }
      .search-container input {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 6px;
        width: 100%;
        box-sizing: border-box;
      }
      table {
        width: 80%;
        margin: 20px auto;
        border-collapse: collapse;
        background-color: #ffffff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }
      th,
      td {
        border: 1px solid #ddd;
        padding: 10px;
        text-align: center;
      }
      th {
        background-color: #ff7622;
        color: white;
        font-weight: bold;
      }
      tr:nth-child(even) {
        background-color: #f9f9f9;
      }
      tr:hover {
        background-color: #e9ecef;
      }
      .status-circle {
        width: 15px;
        height: 15px;
        border-radius: 50%;
        display: inline-block;
        vertical-align: middle;
      }
      .status-success {
        background-color: #28a745;
      }
      .status-failure {
        background-color: #dc3545;
      }
      .status-container {
        margin-top: 20px;
        text-align: center;
      }
      .status-container span {
        display: inline-block;
        margin: 0 10px;
        font-size: 16px;
        font-weight: bold;
      }
      .status-success-msg {
        color: #28a745;
      }
      .status-failure-msg {
        color: #dc3545;
      }
    </style>
  </head>
  <body>
    <%- include('navbar.ejs') %>
    <div style="margin-left: 280px">
      <h3>Danh sách khách hàng</h3>
      <div class="search-container">
        <input
          type="text"
          id="searchInput"
          placeholder="Tìm kiếm khách hàng..."
          onkeyup="searchCustomers()"
        />
      </div>
      <table id="author-table">
        <thead>
          <tr>
            <th scope="col">STT</th>
            <th scope="col">Tên khách hàng</th>
            <th scope="col">Email</th>
            <th scope="col">Ảnh</th>
            <th scope="col">Trạng thái</th>
            <th scope="col">Ngày đăng ký</th>
            <th scope="col">Khoá tài khoản</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
      <div class="status-container">
        <span class="status-circle status-success"></span> Đang hoạt động
        <span class="status-circle status-failure"></span> Không hoạt động
      </div>
    </div>

    <script>
      const token = localStorage.getItem("token");

      function fetchUsers() {
        const data = {
          page: 1,
          limit: 10,
          query: {
            search: "",
            roles: ["admin", "user", "member"],
          },
        };
        console.log("====================================");
        console.log(data);
        console.log("====================================");
        fetch("/api/user/get", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
          body: JSON.stringify(data),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.status === "1") {
              const tableBody = document.querySelector("#author-table tbody");
              tableBody.innerHTML = "";
              console.log("====================================");
              console.log(user);
              console.log("====================================");
              data.data.forEach((user, index) => {
                const createdAt = new Date(user.created_at);
                const formattedDate = `${createdAt
                  .getDate()
                  .toString()
                  .padStart(2, "0")}-${(createdAt.getMonth() + 1)
                  .toString()
                  .padStart(2, "0")}-${createdAt.getFullYear()}`;

                // Xác định màu sắc của trạng thái dựa trên is_block
                const statusClass = user.is_block
                  ? "status-failure"
                  : "status-success";

                const row = document.createElement("tr");
                row.innerHTML = `
            <td>${index + 1}</td>
            <td>${user.username}</td>
            <td>${user.email}</td>
            <td><img src="${user.avatar}" alt="${
                  user.username
                }" style="width: 50px; height: 50px;"></td>
            <td><span class="status-circle ${statusClass}"></span></td>
            <td>${formattedDate}</td>
            <td>
                <button class="btn-block-toggle" data-user-id="${
                  user.user_id
                }" data-is-block="${user.is_block}">
                  ${user.is_block ? "Mở khóa" : "Khóa"}
                </button>
              </td>
          `;
                tableBody.appendChild(row);
              });
              attachBlockToggleEvents();
            } else {
              alert(`Lấy danh sách người dùng thất bại: ${data.message}`);
            }
          })
          .catch((error) => console.error("Error fetching users:", error));
      }

      function searchCustomers() {
        const searchInput = document
          .getElementById("searchInput")
          .value.toLowerCase();
        const tableRows = document.querySelectorAll("#author-table tbody tr");

        tableRows.forEach((row) => {
          const username = row.children[1].textContent.toLowerCase();
          const email = row.children[2].textContent.toLowerCase();

          if (username.includes(searchInput) || email.includes(searchInput)) {
            row.style.display = "";
          } else {
            row.style.display = "none";
          }
        });
      }

      function attachBlockToggleEvents() {
        document.querySelectorAll(".btn-block-toggle").forEach((button) => {
          button.addEventListener("click", async (event) => {
            const userId = event.target.getAttribute("data-user-id");
            const isBlock =
              event.target.getAttribute("data-is-block") === "true";

            const confirmMessage = isBlock
              ? "Bạn có chắc chắn muốn mở khóa tài khoản này?"
              : "Bạn có chắc chắn muốn khóa tài khoản này?";
            if (confirm(confirmMessage)) {
              const apiUrl = isBlock ? "/api/user/unblock" : "/api/user/block";

              try {
                const response = await fetch(apiUrl, {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${token}`, // Đảm bảo token được lấy từ localStorage
                  },
                  body: JSON.stringify({ user_id: userId }),
                });

                const result = await response.json();
                if (result.status === "1") {
                  alert("Thao tác thành công");
                  // Reload hoặc cập nhật danh sách người dùng để phản ánh trạng thái mới
                  location.reload();
                } else {
                  alert("Thao tác thất bại: " + result.message);
                }
              } catch (error) {
                console.error("Error:", error);
                alert("Có lỗi xảy ra, vui lòng thử lại.");
              }
            }
          });
        });
      }

      document.addEventListener("DOMContentLoaded", fetchUsers);
    </script>
  </body>
</html>
