<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Danh sách nhân viên</title>
    <style>
      table {
        width: 80%;
        margin: 20px auto;
        border-collapse: collapse;
      }
      th,
      td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: center;
      }
      th {
        background-color: #f2f2f2;
      }
      tr:nth-child(even) {
        background-color: #f9f9f9;
      }
      tr:hover {
        background-color: #ddd;
      }
      .add_member {
        margin-bottom: 20px;
      }
      .dialog {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 300px;
        padding: 20px;
        background-color: white;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        z-index: 1000;
      }
      .dialog.active {
        display: block;
      }
      .dialog-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 500;
      }
      .dialog-overlay.active {
        display: block;
      }
      .dialog .form-group {
        margin-bottom: 15px;
      }
      .dialog .form-group label {
        display: block;
        margin-bottom: 5px;
      }
      .dialog .form-group input,
      .dialog .form-group select {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
      }
      .dialog .form-actions {
        text-align: right;
      }
      .dialog .form-actions button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      .dialog .form-actions button.cancel {
        background-color: #6c757d;
      }
      .pagination {
        display: flex;
        justify-content: center;
        margin: 20px;
      }
      .pagination button {
        padding: 10px 15px;
        margin: 0 5px;
        border: none;
        background-color: #007bff;
        color: white;
        cursor: pointer;
        border-radius: 4px;
      }
      .pagination button:disabled {
        background-color: #cccccc;
        cursor: not-allowed;
      }
      #page-indicator {
        font-weight: bold;
        margin-left: 10px;
      }
    </style>
  </head>
  <body>
    <%- include('navbar.ejs') %>
    <div style="margin-left: 280px">
      <h3>Danh sách nhân viên</h3>
      <div class="add_member">
        <a
          class="nav-link"
          href="javascript:void(0)"
          onclick="openDialog()"
          style="color: rgb(255, 255, 255)"
          >Thêm nhân viên</a
        >
      </div>
      <table id="user-table" style="margin-top: 50px">
        <thead>
          <tr>
            <th>Email</th>
            <th>Tên đăng nhập</th>
            <th>Quyền</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
      <div class="pagination">
        <button id="prev-page">Trang trước</button>
        <span id="page-indicator"></span>
        <button id="next-page">Trang tiếp</button>
      </div>
    </div>
    <div class="dialog-overlay" id="dialog-overlay"></div>
    <div class="dialog" id="add-member-dialog">
      <form id="add-member-form" enctype="multipart/form-data">
        <div class="form-group">
          <label for="username">Tên đăng nhập:</label>
          <input type="text" id="username" name="username" required />
        </div>
        <div class="form-group">
          <label for="email">Email:</label>
          <input type="email" id="email" name="email" required />
        </div>
        <div class="form-group">
          <label for="role">Quyền:</label>
          <select id="role" name="role" required>
            <option value="admin">Quản trị viên</option>
            <option value="member">Nhân viên</option>
          </select>
        </div>
        <div class="form-group">
          <label for="sex">Giới tính:</label>
          <select id="sex" name="sex" required>
            <option value="1">Nam</option>
            <option value="0">Nữ</option>
          </select>
        </div>
        <div class="form-group">
          <label for="avatar">Ảnh đại diện:</label>
          <input type="file" id="avatar" name="avatar" />
        </div>
        <div class="form-actions">
          <button type="submit">Thêm nhân viên</button>
          <button type="button" class="cancel" onclick="closeDialog()">
            Hủy
          </button>
        </div>
      </form>
    </div>
    <script>
      const token = localStorage.getItem("token");
      let currentPage = 1;
      const itemsPerPage = 10;
      let totalItems = 0;

      function fetchUsers(page = 1) {
        fetch("/api/user/get", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
          body: JSON.stringify({
            page: page,
            limit: itemsPerPage,
            query: {
              roles: ["admin", "member"],
              search: "",
            },
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.status === "1") {
              const tableBody = document.querySelector("#user-table tbody");
              tableBody.innerHTML = "";

              if (Array.isArray(data.data)) {
                data.data.forEach((user) => {
                  const row = document.createElement("tr");
                  row.innerHTML = `
                  <td>${user.email}</td>
                  <td>${user.username}</td>
                  <td>${user.role}</td>
                `;
                  tableBody.appendChild(row);
                });
              } else {
                console.error("Dữ liệu không phải là mảng:", data.data);
              }

              document.getElementById(
                "page-indicator"
              ).textContent = `Trang ${page}`;
              totalItems = data.total;
              updatePaginationButtons(page);
            } else {
              alert(`Lấy danh sách nhân viên thất bại: ${data.message}`);
            }
          })
          .catch((error) => console.error("Error fetching users:", error));
      }

      function openDialog() {
        document.getElementById("dialog-overlay").classList.add("active");
        document.getElementById("add-member-dialog").classList.add("active");
      }

      function closeDialog() {
        document.getElementById("dialog-overlay").classList.remove("active");
        document.getElementById("add-member-dialog").classList.remove("active");
      }

      document
        .getElementById("add-member-form")
        .addEventListener("submit", function (event) {
          event.preventDefault();

          const formData = new FormData(this);

          fetch("/api/user/add", {
            method: "POST",
            headers: {
              Authorization: `Bearer ${token}`,
            },
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.status === "1") {
                alert("Thêm nhân viên thành công");
                closeDialog();
                fetchUsers(currentPage); // Refresh user list
              } else {
                alert(`Thêm nhân viên thất bại: ${data.message}`);
              }
            })
            .catch((error) => console.error("Error adding user:", error));
        });

      function updatePaginationButtons(page) {
        const prevButton = document.getElementById("prev-page");
        const nextButton = document.getElementById("next-page");

        prevButton.disabled = page === 1;
        nextButton.disabled = page === Math.ceil(totalItems / itemsPerPage);
      }

      document.getElementById("prev-page").addEventListener("click", () => {
        if (currentPage > 1) {
          fetchUsers(--currentPage);
        }
      });

      document.getElementById("next-page").addEventListener("click", () => {
        if (currentPage < Math.ceil(totalItems / itemsPerPage)) {
          fetchUsers(++currentPage);
        }
      });

      document.addEventListener("DOMContentLoaded", () => {
        fetchUsers(currentPage);
      });
    </script>
  </body>
</html>
``
