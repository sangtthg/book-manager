<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Danh sách sản phẩm</title>
    <style>
      .main {
        margin-left: 275px;
      }

      .h3_table {
        text-align: left;
        margin-left: 25px;
        margin-right: 10px;
        color: #ff7622;
        font-size: 25px;
      }

      table {
        width: 95%;
        margin: 50px auto;
        border-collapse: collapse;
      }

      th,
      td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: center;
      }

      th {
        background-color: #ff7622;
        color: #fff;
      }

      tr:nth-child(even) {
        background-color: #f9f9f9;
      }

      tr:hover {
        background-color: #ddd;
      }

      .addbook_category {
        display: flex;
        margin-left: 10px;
        width: 300px;
      }

      .dialog {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 300px;
        padding: 20px;
        background-color: white;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        display: none;
        max-height: 90%;
        overflow-y: auto;
      }

      .dialog.active {
        display: block;
      }

      .dialog-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 500;
        display: none;
      }

      .dialog-overlay.active {
        display: block;
      }

      .dialog .form-group {
        margin-bottom: 15px;
      }

      .dialog .form-group label {
        display: block;
        margin-bottom: 5px;
      }

      .dialog .form-group input,
      .dialog .form-group textarea,
      .dialog .form-group select {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
      }

      .dialog .form-actions {
        text-align: right;
      }

      .dialog .form-actions button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }

      .dialog .form-actions button.cancel {
        background-color: #6c757d;
      }

      .pagination {
        margin: 20px auto;
        text-align: center;
      }

      .pagination button {
        padding: 10px 20px;
        margin: 0 5px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }

      .pagination span {
        margin: 0 10px;
      }

      .ellipsis {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        overflow: hidden;
        -webkit-line-clamp: 4;
        line-height: 1.5;
        max-height: 5.5em;
        max-width: 210px;
        text-overflow: ellipsis;
      }

      .csstitle {
        max-width: 200px;
      }

      .dialog.active,
      .dialog-overlay.active {
        display: block;
      }

      #authorSelect,
      #categorySelect {
        width: 100%;
        max-height: 100px;
        overflow-y: auto;
      }

      .add-book-btn {
        width: 150px;
        height: 40px;
        position: absolute;

        right: 50px;
        padding: 5px 10px;
        background-color: #ff7622;
        color: white;
        font-weight: bold;
        font-family: "Times New Roman", Times, serif;
        border: none;
        border-radius: 15px;
        cursor: pointer;
        font-size: 17px;
      }

      .add-book-btn:hover {
        background-color: #0056b3;
      }

      button.edit-button {
        background-color: #4caf50;
        color: white;
        border: none;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 5px;
      }

      button.delete-button {
        background-color: #f44336;
        color: white;
        border: none;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 5px;
      }

      button.edit-button:hover {
        background-color: #ff7622;
      }

      button.delete-button:hover {
        background-color: #e53935;
      }

      td button {
        margin-right: 5px;
      }

      .imgPage {
        width: 20px;
        height: 20px;
      }

      #prevPageBtn {
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
        display: inline-flex;
      }

      #prevPageIcon {
        width: 24px;
        height: 24px;
        vertical-align: middle;
      }

      .pagination {
        margin-left: 27px;
        margin-right: 27px;
        display: flex;
        align-items: center;
        background-color: #fff;
        padding: 5px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      }

      #page-indicator {
        position: relative;
      }

      .form-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .form-actions button:hover {
        opacity: 0.9;
      }

      input[type="file"] {
        display: none;
      }

      .custom-file-upload {
        display: inline-block;
        padding: 10px 20px;
        cursor: pointer;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: #f8f9fa;
        color: #007bff;
      }

      .custom-file-upload:hover {
        background-color: #e2e6ea;
      }
      .nav-link {
        color: #010101;
        text-decoration: none;
        padding: 10px;
      }

      .nav-link.active {
        background-color: orange;
        color: white;
      }
      .nav-link:target {
        background-color: orange;
        color: white;
      }

      .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
      }

      .modal-content {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        margin-left: 450px;
        text-align: center;
        margin-top: 300px;
        max-width: 50%;
        max-height: 50%;
      }

      .modal-buttons {
        margin-top: 20px;
      }

      .delete-btn {
        background-color: red;
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        margin-right: 10px;
      }

      .cancel-btn {
        background-color: rgb(4, 141, 61);
        color: white;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
      }
    </style>
  </head>

  <body>
    <%- include('navbar.ejs') %>
    <div class="main">
      <h3 class="h3_table">Danh sách sản phẩm</h3>
      <div class="addbook_category">
        <button class="add-book-btn" id="addBookButton">Thêm sách</button>
      </div>
      <table id="book-table">
        <thead>
          <tr>
            <th>STT</th>
            <th>Mã Sách</th>
            <th>Tên Sách</th>
            <th>Tác giả</th>
            <th>Thể loại</th>
            <th>Mô tả</th>
            <th>Năm xuất bản</th>
            <th>Ảnh bìa</th>
            <th>Giá cũ</th>
            <th>Giá mới</th>
            <th>Chức năng</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
      <div class="pagination">
        <button onclick="previousPage()" id="prevPageBtn">
          <img src="/uploads/left.png" alt="Trang trước" id="prevPageIcon" />
        </button>
        <span id="page-indicator">Trang 1</span>
        <button onclick="nextPage()" id="prevPageBtn">
          <img src="/uploads/right.png" alt="Trang sau" id="prevPageIcon" />
        </button>
      </div>

      <div class="addbook">
        <div class="dialog-overlay" id="dialogOverlay"></div>
        <div class="dialog" id="dialog" style="width: 50%">
          <h3 id="dialog-title" style="font-size: 25px; color: #ff7622">
            Thêm sách
          </h3>

          <div class="form-group">
            <label for="bookTitle">Tên sách</label>
            <input type="text" id="bookTitle" name="title" />
          </div>
          <div class="form-group">
            <label for="authorSelect">Tác giả</label>
            <select id="authorSelect" name="author_id"></select>
          </div>
          <div class="form-group">
            <label for="categorySelect">Thể loại</label>
            <select id="categorySelect" name="category_id"></select>
          </div>
          <div class="form-group">
            <label for="description">Mô tả</label>
            <textarea id="description" name="description"></textarea>
          </div>
          <div class="form-group">
            <label for="quantity">Số lượng</label>
            <textarea type="number" id="quantity" name="quantity"></textarea>
          </div>
          <div class="form-group">
            <label for="publicationYear">Năm xuất bản</label>
            <input type="number" id="publicationYear" name="publication_year" />
          </div>
          <div class="form-group">
            <label for="oldPrice">Giá cũ</label>
            <input type="number" id="oldPrice" name="old_price" />
          </div>
          <div class="form-group">
            <label for="newPrice">Giá mới</label>
            <input type="number" id="newPrice" name="new_price" />
          </div>
          <div class="form-group">
            <label for="bookAvatar" class="custom-file-upload">
              Chọn ảnh bìa
            </label>
            <input type="file" id="bookAvatar" name="book_avatar" />
          </div>

          <div class="form-actions">
            <button
              onclick="saveBook()"
              style="background-color: #4caf50; color: #fff"
            >
              Lưu
            </button>
            <button
              onclick="closeDialog()"
              style="background-color: #f44336; color: #fff"
            >
              Hủy
            </button>
          </div>
        </div>
      </div>
    </div>
    <div id="deleteModal" class="modal" style="display: none">
      <div class="modal-content">
        <h2>Bạn có chắc muốn xóa sách này?</h2>
        <div class="modal-buttons">
          <button id="confirmDeleteBtn" class="delete-btn">Xóa</button>
          <button id="cancelDeleteBtn" class="cancel-btn">Hủy</button>
        </div>
      </div>
    </div>

    <script>
      document
        .getElementById("addBookButton")
        .addEventListener("click", function () {
          window.location.href = "/admin/addbook";
        });

      let isEditMode = false;
      let editBookId = null;
      const token = localStorage.getItem("token");
      const itemsPerPage = 10;
      let currentPage = 1;

      let booksData = []; // Biến toàn cục để lưu dữ liệu sách

      function fetchBooks(page = 1) {
        const offset = (page - 1) * itemsPerPage;
        fetch(`/api/book/get`, {
          method: "POST",
          headers: {
            Authorization: `Bearer ${token}`,
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            page,
            limit: itemsPerPage,
            query: { search: "", category_id: null },
          }),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
          })
          .then((data) => {
            if (data.status == "1") {
              booksData = data.data.data; // Lưu dữ liệu sách vào biến toàn cục
              const tableBody = document.querySelector("#book-table tbody");
              tableBody.innerHTML = "";

              data.data.data.forEach((book, index) => {
                const row = document.createElement("tr");

                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${book.book_id}</td>
                    <td class="csstitle">${book.title}</td>
                    <td>${book.author_name}</td>
                    <td>${book.category_name}</td>
                    <td class="ellipsis">${book.description}</td>
                    <td>${book.publication_year}</td>
                    <td><img src="${book.book_avatar}" alt="${
                  book.title
                }" width="50"></td>
                    <td>${book.old_price}</td>
                    <td>${book.new_price}</td>
                    <td>
                        <button class="edit-button" data-book-id="${
                          book.book_id
                        }">Sửa</button>
                        <button class="delete-button" onclick="confirmDelete(${
                          book.book_id
                        })">Xóa</button>
                    </td>`;
                tableBody.appendChild(row);
              });

              document.querySelectorAll(".edit-button").forEach((button) => {
                button.addEventListener("click", () => {
                  const bookId = button.getAttribute("data-book-id");
                  const book = booksData.find((b) => b.book_id == bookId); // Tìm sách theo ID
                  console.log(
                    "Toàn bộ dữ liệu sách trước khi lưu vào sessionStorage:",
                    book
                  );
                  sessionStorage.setItem("bookData", JSON.stringify(book));

                  // Chuyển hướng đến trang cập nhật sách
                  window.location.href = `/admin/updatebook/${bookId}`;
                });
              });

              document.getElementById(
                "page-indicator"
              ).textContent = `Trang ${page}`;
              totalItems = data.data.totalAll;
              currentPage = page;
              updatePaginationButtons(page);
            } else {
              alert(`Lấy danh sách sách thất bại: ${data.message}`);
            }
          })
          .catch((error) => {
            console.error("Error fetching books:", error);
            alert(`Có lỗi xảy ra khi lấy danh sách sách: ${error.message}`);
          });
      }

      function updatePaginationButtons(page) {
        const totalPages = Math.ceil(totalItems / itemsPerPage);
        const previousButton = document.querySelector(
          ".pagination button:first-child"
        );
        const nextButton = document.querySelector(
          ".pagination button:last-child"
        );
        previousButton.disabled = page <= 1;
        nextButton.disabled = page >= totalPages;
      }

      function nextPage() {
        if (currentPage < Math.ceil(totalItems / itemsPerPage)) {
          currentPage++;
          fetchBooks(currentPage);
        }
      }

      function previousPage() {
        if (currentPage > 1) {
          currentPage--;
          fetchBooks(currentPage);
        }
      }
      function confirmDelete(bookId) {
        selectedBookId = bookId;
        document.getElementById("deleteModal").style.display = "block";
      }

      document
        .getElementById("confirmDeleteBtn")
        .addEventListener("click", function () {
          deleteBook(selectedBookId);
          document.getElementById("deleteModal").style.display = "none";
        });

      document
        .getElementById("cancelDeleteBtn")
        .addEventListener("click", function () {
          document.getElementById("deleteModal").style.display = "none";
        });
      async function deleteBook(bookId) {
        try {
          const response = await fetch("/api/book/delete", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${token}`,
            },
            body: JSON.stringify({ book_id: bookId }),
          });

          const result = await response.json();

          if (result.status === "1") {
            alert("Xóa sách thành công");

            const bookElement = document.querySelector(`#book-${bookId}`);
            if (bookElement) {
              bookElement.remove();
            } else {
              console.warn(`Phần tử với ID book-${bookId} không tồn tại`);
            }
            location.reload();
          } else {
            alert("Xóa sách thất bại: " + result.message);
          }
        } catch (error) {
          console.error("Error deleting book:", error);
          alert("Có lỗi xảy ra. Vui lòng thử lại sau.");
        }
      }

      document.addEventListener("DOMContentLoaded", () =>
        fetchBooks(currentPage)
      );
    </script>
  </body>
</html>
