<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Thêm sách</title>
  </head>
  <style>
     body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
      }

      .container {
       
        margin-left: 320px;
        margin: 50px auto;
        background-color: #fff;
     
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }

      h1 {
        text-align: center;
        color: #333;
      }

      .form-group {
        margin-bottom: 20px;
      }

      .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
      }

      .form-group input,
      .form-group select,
      .form-group textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
      }

      .form-actions {
        display: flex;
        justify-content: space-between;
       
      }

      .form-actions button {
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
        margin: 20px; 
      }

      .form-actions button:first-child {
        background-color: #4caf50;
        color: white;
      }

      .form-actions button:last-child {
        background-color: #f44336;
        color: white;
      }

      .custom-file-upload {
        display: block;
        cursor: pointer;
        color: #007bff;
        text-decoration: underline;
      }

      #loadingOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Màu nền mờ */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000; /* Đảm bảo nó nằm trên cùng */
}

.spinner {
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top: 4px solid #fff;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
}



    </style>
  </style>
  <body>
    <%- include('navbar.ejs') %>
    <div class="container" style="margin-left: 340px; width: 70%;" >
      <h1 style="color: #ff7622;">Thêm sách mới</h1>
      <div class="form-group">
        <label for="bookTitle">Tên sách</label>
        <input required type="text" id="bookTitle" name="title"/>
      </div>
      <div class="form-group">
        <label for="authorSelect">Tác giả</label>
        <select id="authorSelect" name="author_id"></select>
      </div>
      <div class="form-group">
        <label for="categorySelect">Thể loại</label>
        <select id="categorySelect" name="category_id"></select>
      </div>
      <div class="form-group">
        <label for="description">Mô tả</label>
        <textarea id="description" name="description"></textarea>
      </div>
      <div class="form-group">
        <label for="quantity">Số lượng</label>
        <input required type="number" id="quantity" name="quantity" />
      </div>
      <div class="form-group">
        <label for="publicationYear">Năm xuất bản</label>
        <input required type="number" id="publicationYear" name="publication_year" />
      </div>
      <div class="form-group">
        <label for="oldPrice">Giá cũ</label>
        <input required type="number" id="oldPrice" name="old_price" />
      </div>
      <div class="form-group">
        <label for="newPrice">Giá mới</label>
        <input required type="number" id="newPrice" name="new_price" />
      </div>
      <div class="form-group">
        <label for="bookAvatar" class="custom-file-upload" style="text-decoration: none; color: black;">Chọn ảnh bìa</label>
        <input required type="file" id="bookAvatar" name="book_avatar" />
        <img id="bookAvatarPreview" style="display: none; max-width: 200px" />
      </div>
      <div class="form-group">
        <label for="avatarReviews" class="custom-file-upload" style="text-decoration: none; color: black;">Chọn ảnh đọc thử (tối đa 3 ảnh)</label>
        <input required type="file" id="avatarReviews" name="avatar_reviews" multiple />
        <div id="avatarReviewsPreviews" style="margin-top: 10px;"></div>
    </div>
      <div class="form-actions">
        <button onclick="saveBook()" style="width: 100px; margin-left: 200px;" type="submit" >Lưu</button>
        <button onclick="closeDialog()" style="width: 100px; margin-right: 200px;" type="submit">Hủy</button>
      </div>
    </div>
    
    <div id="loadingOverlay" style="display: none;">
      <div class="spinner"></div>
    </div>
  </body>
  <script>
    const token = localStorage.getItem("token");
    function fetchAuthors() {
    
 
      fetch("/api/author/get", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${token}`,
          "Content-Type": "application/json",
        },
 
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.status === "1") {
            const authorSelect = document.getElementById("authorSelect");
            authorSelect.innerHTML = "";
            data.data.forEach((author) => {
              const option = document.createElement("option");
              option.value = author.author_id;
              option.textContent = author.author_name;
              authorSelect.appendChild(option);
            });
          } else {
            alert(`Lấy danh sách tác giả thất bại: ${data.message}`);
          }
        })
        .catch((error) => console.error("Error fetching authors:", error));
    }
 

    function fetchCategories() {
      fetch("/api/category/get", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${token}`,
          "Content-Type": "application/json",
        },
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.status === "1") {
            const categorySelect = document.getElementById("categorySelect");
            categorySelect.innerHTML = "";

            data.data.forEach((category) => {
              const option = document.createElement("option");
              option.value = category.category_id;
              option.textContent = category.category_name;
              categorySelect.appendChild(option);
            });
          } else {
            alert(`Lấy danh sách thể loại thất bại: ${data.message}`);
          }
        })
        .catch((error) => console.error("Error fetching categories:", error));
    }
    function validateForm() {
  const inputs = document.querySelectorAll('.form-group input, .form-group select, .form-group textarea');
  for (const input of inputs) {
    if (input.required && !input.value.trim()) {
      alert(`Vui lòng điền đầy đủ thông tin trong trường: ${input.previousElementSibling.textContent}`);
      input.focus();
      return false;
    }
  }
  return true;
}


    function saveBook() {

      if (!validateForm()) {
    return; // Dừng hàm nếu không hợp lệ
  }
  // Hiển thị overlay loading
  document.getElementById("loadingOverlay").style.display = "flex";

  const formData = new FormData();
  formData.append("title", document.getElementById("bookTitle").value);
  formData.append("author_id", document.getElementById("authorSelect").value);
  formData.append("category_id", document.getElementById("categorySelect").value);
  formData.append("description", document.getElementById("description").value);
  formData.append("publication_year", document.getElementById("publicationYear").value);
  formData.append("old_price", document.getElementById("oldPrice").value);
  formData.append("new_price", document.getElementById("newPrice").value);
  formData.append("quantity", document.getElementById("quantity").value);
  formData.append("book_avatar", document.getElementById("bookAvatar").files[0]);

  const avatarReviews = document.getElementById("avatarReviews").files;
  for (let i = 0; i < avatarReviews.length; i++) {
    formData.append("avatar_reviews", avatarReviews[i]);
  }

  fetch("/api/book/add", {
    method: "POST",
    headers: {
      Authorization: `Bearer ${token}`,
    },
    body: formData,
  })
    .then((response) => response.json())
    .then((data) => {
      // Ẩn overlay loading khi có phản hồi từ server
      document.getElementById("loadingOverlay").style.display = "none";

      if (data.status === "1") {
        alert("Thêm sách thành công");
        window.location.href = "/admin/ListProduct";
      } else {
        alert(`Thêm sách thất bại: ${data.message}`);
      }
    })
    .catch((error) => {
      // Ẩn overlay loading khi có lỗi xảy ra
      document.getElementById("loadingOverlay").style.display = "none";
      console.error("Error saving book:", error);
      alert(`Có lỗi xảy ra khi thêm sách: ${error.message}`);
    });
}


        function closeDialog(){
            window.location.href = "/admin/ListProduct";
        }

        window.onload = function () {
  fetchAuthors();
  fetchCategories();

  document.getElementById("bookAvatar").addEventListener("change", function (event) {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function (e) {
        const bookAvatarPreview = document.getElementById("bookAvatarPreview");
        bookAvatarPreview.src = e.target.result;
        bookAvatarPreview.style.display = "block"; 
      };
      reader.readAsDataURL(file);
    }
  });

  document.getElementById("avatarReviews").addEventListener("change", function (event) {
  const files = event.target.files;
  const avatarReviewsPreviews = document.getElementById("avatarReviewsPreviews");

  Array.from(files).forEach((file) => {
    const reader = new FileReader();
    reader.onload = function (e) {
      const img = document.createElement("img");
      img.src = e.target.result;
      img.alt = "Ảnh đánh giá";
      img.style.maxWidth = "100px";
      img.style.marginRight = "10px";
      img.style.display = "inline-block";
      avatarReviewsPreviews.appendChild(img);
    };
    reader.readAsDataURL(file);
  });
});
};

   
  </script>
</html>
