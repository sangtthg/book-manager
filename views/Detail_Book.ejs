<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Detail Book</title>
    <style>
      body {
        margin: 0;
        font-family: Arial, sans-serif;
      }

      .container h1 {
        font-size: 24px;
      }

      .container h2 {
        font-size: 20px;
        margin-top: 20px;
      }

      .container p {
        margin: 10px 0;
      }

      .book-info {
        display: flex;
        align-items: flex-start;
      }

      .book-info img {
        max-width: 200px;
        margin-right: 20px;
      }

      .book-details {
        flex: 1;
      }

      .book-details p {
        margin: 10px 0;
      }

      .review-images-container {
        display: flex;
        flex-wrap: wrap;
      }

      .review-images-title {
        margin-top: 20px;
        font-weight: bold;
      }

      #avatarReviewsContainer {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
      }

      #avatarReviewsContainer img.review-images {
        width: 200px;
        height: 300px;
        object-fit: cover;
        border-radius: 5px;
      }

      .out-of-stock {
        color: red;
      }
    </style>
  </head>
  <body>
    <%- include('navbar.ejs') %>
    <div style="margin-left: 300px">
      <h1 style="font-weight: bold; color: #ff7622">Chi tiết Sách</h1>
      <p style="display: none">
        <strong>Book ID:</strong> <span id="bookId"><%= bookId %></span>
      </p>
      <div id="bookDetails">
        <h2 id="title" style="font-weight: bold"></h2>
        <div class="book-info">
          <img id="bookAvatar" alt="Book Avatar" />
          <div class="book-details">
            <p><strong>Tác giả:</strong> <span id="author"></span></p>
            <p><strong>Thể loại:</strong> <span id="category"></span></p>
            <p>
              <strong>Năm xuất bản:</strong> <span id="publicationYear"></span>
            </p>
            <p><strong>Giá sách:</strong> <span id="oldPrice"></span> đ</p>
            <p>
              <strong>Giá mới:</strong>
              <span id="newPrice" style="color: red; font-style: italic"></span>
              đ
            </p>
            <p>
              <strong>Đánh giá trung bình:</strong>
              <span id="rateBook"></span> sao
            </p>
            <p><strong>Lượt xem:</strong> <span id="viewsCount"></span></p>
            <p><strong>Lượt mua:</strong> <span id="purchaseCount"></span></p>
            <p><strong>Số lượng sách:</strong> <span id="soluong"></span></p>
          </div>
        </div>

        <p><strong>Mô tả:</strong> <span id="description"></span></p>

        <p style="display: none">
          <strong>Discount Percentage:</strong>
          <span id="discountPercentage"></span>
        </p>

        <p style="display: none">
          <strong>Used Books:</strong> <span id="usedBooks"></span>
        </p>

        <hr />

        <h3 style="color: #ff7622">
          <strong>Ảnh đọc thử</strong>
        </h3>
        <div id="avatarReviewsContainer">
          <!-- Hình ảnh từ avatar_reviews sẽ hiển thị ở đây -->
        </div>

        <div id="reviewImagesContainer">
          <div
            class="review-images-container"
            id="reviewImages"
            style="display: none"
          >
            <!-- Hình ảnh từ reviews sẽ hiển thị ở đây -->
          </div>
        </div>

        <hr />

        <h3 style="color: #ff7622">
          <strong>Đánh giá</strong>
        </h3>
        <div id="reviews">
          <!-- Đánh giá sẽ hiển thị ở đây -->
        </div>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const bookIdElement = document.getElementById("bookId");
        const bookId = bookIdElement.textContent.trim(); // Loại bỏ khoảng trắng

        const token = localStorage.getItem("token");
        fetch("/api/book/get-detail", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
          body: JSON.stringify({ book_id: bookId }),
        })
          .then((response) => response.json())
          .then((data) => {
            if (
              data.status === "1" &&
              data.message === "Lấy thông tin sách và đánh giá thành công"
            ) {
              const book = data.data;

              // Hiển thị thông tin sách
              document.getElementById("title").textContent = book.title;
              document.getElementById("author").textContent = book.author_name;
              document.getElementById("category").textContent =
                book.category_name;
              document.getElementById("description").textContent =
                book.description;
              document.getElementById("publicationYear").textContent =
                book.publication_year;
              document.getElementById("oldPrice").textContent = book.old_price;
              document.getElementById("newPrice").textContent = book.new_price;
              document.getElementById("rateBook").textContent = book.rate_book;
              document.getElementById("viewsCount").textContent =
                book.views_count;
              document.getElementById("purchaseCount").textContent =
                book.purchase_count;

              const quantityElement = document.getElementById("soluong");
              if (book.quantity === 0) {
                quantityElement.textContent = "Hết hàng";
                quantityElement.classList.add("out-of-stock");
              } else {
                quantityElement.textContent = book.quantity;
                quantityElement.classList.remove("out-of-stock");
              }

              document.getElementById("bookAvatar").src = book.book_avatar;

              const avatarReviewsContainer = document.getElementById(
                "avatarReviewsContainer"
              );
              avatarReviewsContainer.innerHTML = ""; // Xóa nội dung trước đó
              book.avatar_reviews.forEach((image) => {
                const imgElement = document.createElement("img");
                imgElement.src = image;
                imgElement.alt = "Avatar Review";
                imgElement.classList.add("review-images");
                avatarReviewsContainer.appendChild(imgElement);
              });

              const reviewImagesContainer =
                document.getElementById("reviewImages");
              reviewImagesContainer.innerHTML = ""; // Xóa nội dung cũ
              book.reviews.forEach((review) => {
                review.review_images.split(",").forEach((image) => {
                  const imgElement = document.createElement("img");
                  imgElement.src = image;
                  imgElement.alt = "Review Image";
                  imgElement.classList.add("review-images");
                  reviewImagesContainer.appendChild(imgElement);
                });
              });

              const reviewsContainer = document.getElementById("reviews");
              reviewsContainer.innerHTML = "";
              book.reviews.forEach((review) => {
                const reviewElement = document.createElement("div");
                reviewElement.innerHTML = `
                  <p><strong></strong> <img src="${
                    review.avatar
                  }" alt="Reviewer Avatar" style="max-width: 50px;" /></p>
                  <p><strong>Ảnh đánh giá:</strong> <img src="${
                    review.review_images
                  }" alt="Reviewer Avatar" style="max-width: 50px;" /></p>
                  <p><strong>Username:</strong> ${review.username}</p>
                  <p><strong>Rating:</strong> ${review.rating} sao</p>
                  <p><strong>Content:</strong> ${review.comment}</p>
                  <p><strong>Date:</strong> ${new Date(
                    review.created_at
                  ).toLocaleString()}</p>
                  <hr />
                `;
                reviewsContainer.appendChild(reviewElement);
              });
            } else {
              console.error("API Error:", data.message);
            }
          })
          .catch((error) => {
            console.error("Fetch Error:", error);
          });
      });
    </script>
  </body>
</html>
