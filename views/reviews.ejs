<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>All Reviews</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Font Awesome -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <style>
      body {
        background-color: #f8f9fa;
      }
      .review-card {
        transition: all 0.3s ease;
      }
      .review-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
      }
      .avatar-img {
        width: 50px;
        height: 50px;
        object-fit: cover;
      }
      .book-img {
        max-height: 200px;
        object-fit: cover;
      }
      .star-rating {
        color: #ffc107;
      }
    </style>
  </head>
  <body>
    <%- include('navbar.ejs') %>
    <div style="margin-left: 280px">
      <div class="container mt-5">
        <h1 class="mb-4 text-center" style="color: #ff7622">
          Danh sách đánh giá
        </h1>

        <!-- Tìm kiếm sách -->
        <form id="search-form" class="mb-4">
          <div class="input-group">
            <input
              type="text"
              id="search-input"
              class="form-control"
              placeholder="Tìm kiếm theo tên sách"
            />
            <button class="btn btn-primary" type="submit">
              <i class="fas fa-search"></i> Search
            </button>
          </div>
        </form>

        <!-- Container chứa review -->
        <div id="reviews-container" class="row g-4"></div>
      </div>
    </div>

    <!-- Bootstrap JS và các phụ thuộc -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const searchForm = document.getElementById("search-form");
        const searchInput = document.getElementById("search-input");

        const fetchReviews = (query = "") => {
          fetch(`/reviews/all?bookTitle=${query}`)
            .then((response) => response.json())
            .then((data) => {
              console.log("====================================");
              console.log(data);
              console.log("====================================");

              const reviewsContainer =
                document.getElementById("reviews-container");
              reviewsContainer.innerHTML = "";
              console.log("Reviews:", data.reviews);
              data.reviews.forEach((review) => {
                const book = data.booksMap[review.bookId];
                const reviewElement = `
                  <div class="col-md-6 col-lg-4 mb-4" id="review-${review.id}">
                    <div class="card h-100 review-card">
                      <div class="card-body">
                        <div class="d-flex align-items-center mb-3">
                          <img src="${
                            review.reviewerAvatar || "default-avatar.jpg"
                          }" class="rounded-circle avatar-img me-3" alt="${
                  review.reviewerName
                }">
                          <h5 class="card-title mb-0">${
                            review.reviewerName
                          }</h5>
                        </div>
                        <img src="${
                          book && book.book_avatar
                            ? book.book_avatar
                            : "default-image.jpg"
                        }" class="img-fluid mb-3 book-img w-100" alt="${
                  book ? book.title : "Book Image"
                }">
                        <h6 class="card-subtitle mb-2 text-muted">
                          ${
                            book
                              ? `Book: ${book.title}`
                              : "Book information not available"
                          }
                        </h6>
                        <p class="card-text">${review.comment}</p>
                        
                        <p class="card-text">
                          <small class="text-muted">Reviewed on: ${new Date(
                            review.createdAt
                          ).toLocaleDateString()}</small>
                        </p>
                        <p class="card-text star-rating">
                          ${getRatingStars(review.rating)}
                        </p>
                        <div class="d-flex justify-content-between">
                          <button class="btn btn-outline-secondary btn-sm" onclick="hideReview(${
                            review.id
                          })">
                            <i class="fas fa-eye-slash"></i> Hide
                          </button>
                          <button class="btn btn-outline-danger btn-sm" onclick="deleteReview(${
                            review.id
                          })">
                            <i class="fas fa-trash"></i> Delete
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                `;
                reviewsContainer.innerHTML += reviewElement;
              });
            })
            .catch((error) => console.error("Error fetching reviews:", error));
        };

        fetchReviews();

        searchForm.addEventListener("submit", (event) => {
          event.preventDefault();
          const query = searchInput.value.trim();
          fetchReviews(query);
        });
      });

      const getRatingStars = (rating) => {
        let stars = "";
        for (let i = 1; i <= 5; i++) {
          stars += `<i class="fas fa-star${i <= rating ? "" : "-o"}"></i>`;
        }
        return stars;
      };

      const hideReview = (id) => {
        fetch(`/reviews/${id}/hide`, {
          method: "PATCH",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.message === "Review hidden successfully") {
              document.getElementById(`review-${id}`).style.display = "none";
            }
          })
          .catch((error) => console.error("Error hiding review:", error));
      };

      const deleteReview = (id) => {
        if (confirm("Are you sure you want to delete this review?")) {
          fetch(`/reviews/byadmin/${id}`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.message === "Review deleted") {
                document.getElementById(`review-${id}`).remove();
              }
            })
            .catch((error) => console.error("Error deleting review:", error));
        }
      };
    </script>
  </body>
</html>
